
service: imagecrops

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 1024 # optional, default is 1024
  timeout: 20 # optional, default is 6
  satege: dev

  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "s3:*"
        Resource:
          - { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ]]}
          - "arn:aws:s3:::jbl-product-images-dev/*"
          - "arn:aws:s3:::jbl-product-images-resized-dev/*"


package:
  include:
    - bin
    - libs
  exclude:
    - tests
    - serverless-nodejs-image

functions:
  cropImage:
    handler: handler.cropImage
    description: Crops images, from S3 bucket and puts into new folder
    events:
      - s3:
          bucket: jbl-product-images-dev
          event: s3:ObjectCreated:*
          rules:
            - prefix: product/
      - s3:
          bucket: jbl-product-images-dev
          event: s3:ObjectCreated:*
          rules:
            - prefix: category_icons/
      - s3:
          bucket: jbl-product-images-dev
          event: s3:ObjectCreated:*
          rules:
            - prefix: retailer_landing/


# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: jbl-product-images-dev
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
